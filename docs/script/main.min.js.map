{"version":3,"file":"main.min.js","mappings":"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","sources":["webpack://rorschach-webgl/./src/ts/gl-utils/gl-canvas.ts","webpack://rorschach-webgl/./src/ts/gl-utils/gl-resource.ts","webpack://rorschach-webgl/./src/ts/gl-utils/shader-manager.ts","webpack://rorschach-webgl/./src/ts/gl-utils/shader-sources.ts","webpack://rorschach-webgl/./src/ts/gl-utils/shader.ts","webpack://rorschach-webgl/./src/ts/gl-utils/vbo.ts","webpack://rorschach-webgl/./src/ts/gl-utils/viewport.ts","webpack://rorschach-webgl/./src/ts/main.ts","webpack://rorschach-webgl/./src/ts/parameters.ts","webpack://rorschach-webgl/./src/ts/rorschach-face.ts","webpack://rorschach-webgl/./src/ts/shader-picker.ts","webpack://rorschach-webgl/./src/ts/time.ts","webpack://rorschach-webgl/webpack/bootstrap","webpack://rorschach-webgl/webpack/startup"],"sourcesContent":["import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags?: object): boolean {\r\n    function setError(message: string): void {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(`Your browser or device only supports experimental WebGL.\r\nThe simulation may not run as expected.`);\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport { GLResource };\r\n","import { gl } from \"./gl-canvas\";\r\nimport { Shader } from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader | null;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader } = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback): void {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean): void {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match: string, name: string) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader): void {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader: Shader | null) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string): void {\r\n    if (typeof cachedShaders[name] !== \"undefined\") {\r\n        if (cachedShaders[name].shader !== null) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedSource): void {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(`Cannot load '${filename}' shader source: ${xhr.statusText}`);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(`Cannot load '${filename}' shader source: ${xhr.statusText}`);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import { GLResource } from \"./gl-resource\";\r\nimport { VBO } from \"./vbo\";\r\n\r\nfunction notImplemented(): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\ninterface IBindingType {\r\n    str: string;\r\n    binder: (...args: any[]) => unknown;\r\n}\r\nconst types: { [index: string]: IBindingType } = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: { [name: string]: IShaderUniform };\r\n    public a: { [name: string]: IShaderAttribute };\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName: string) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName: string) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = {};\r\n        for (let i = 0; i < this.uCount; i++) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = {};\r\n        for (let i = 0; i < this.aCount; i++) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { ShaderProgram as Shader };\r\n","import { GLResource } from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport { VBO };\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport { Viewport };\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport { Viewport } from \"./gl-utils/viewport\";\r\nimport { Shader } from \"./gl-utils/shader\";\r\n\r\nimport { Parameters } from \"./parameters\";\r\nimport { getTime } from \"./time\";\r\nimport * as RorschachFace from \"./rorschach-face\";\r\nimport * as ShaderPicker from \"./shader-picker\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction main(): void {\r\n    if (!GLCanvas.initGL()) {\r\n        return;\r\n    }\r\n\r\n    function adjustCanvasSize(): void {\r\n        GLCanvas.adjustSize(Parameters.supportHighDPI);\r\n        Viewport.setFullCanvas(gl);\r\n    }\r\n\r\n    function adjustShaderToCanvas(shader: Shader): void {\r\n        const aspectRatio = Page.Canvas.getAspectRatio();\r\n        if (aspectRatio >= 1) {\r\n            shader.u[\"uCoordsAdjustment\"].value = [aspectRatio, 1];\r\n        } else if (aspectRatio < 1) {\r\n            shader.u[\"uCoordsAdjustment\"].value = [1, 1 / aspectRatio];\r\n        }\r\n    }\r\n\r\n    function updateBackgroundColor(): void {\r\n        const backgroundColor = Parameters.backgroundColor;\r\n        gl.clearColor(backgroundColor.r / 255, backgroundColor.g / 255, backgroundColor.b / 255, 1);\r\n        RorschachFace.setBackgroundColor(backgroundColor);\r\n    }\r\n\r\n    let canvasSizeChanged = true;\r\n    let backgroundColorChanged = true;\r\n    Parameters.addResizeObserver(() => canvasSizeChanged = true);\r\n    Parameters.addColorChangeObserver(() => backgroundColorChanged = true);\r\n\r\n    function mainLoop(): void {\r\n        const currentMode = Parameters.watchmenMode ? ShaderPicker.EMode.WATCHMEN : ShaderPicker.EMode.CLASSIC;\r\n        const shaderChanged = ShaderPicker.enableShader(currentMode);\r\n\r\n        const currentShader = ShaderPicker.getCurrentShader();\r\n        if (canvasSizeChanged || shaderChanged) {\r\n            adjustShaderToCanvas(currentShader);\r\n        }\r\n        if (canvasSizeChanged) {\r\n            adjustCanvasSize();\r\n            canvasSizeChanged = false;\r\n        }\r\n\r\n        if (backgroundColorChanged) {\r\n            updateBackgroundColor();\r\n            backgroundColorChanged = false;\r\n        }\r\n\r\n        currentShader.u[\"uTime\"].value = getTime();\r\n        currentShader.u[\"uSharpness\"].value = 1 - Parameters.sharpness;\r\n        currentShader.u[\"uThreshold\"].value = 1 - Parameters.density;\r\n        currentShader.u[\"uScale\"].value = Parameters.scale;\r\n        currentShader.u[\"uSymetry\"].value = Parameters.symetry;\r\n        currentShader.u[\"uMaxDetails\"].value = Parameters.details;\r\n\r\n        currentShader.bindUniforms();\r\n\r\n        if (currentMode === ShaderPicker.EMode.WATCHMEN) { // no need to clear canvas in classic mode because it redraws the whole canvas anyways\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    function enableWatchmenMode(enabled: boolean): void {\r\n        RorschachFace.setVisibility(enabled);\r\n    }\r\n    Parameters.addWatchmenModeChange(enableWatchmenMode);\r\n\r\n    Page.Canvas.showLoader(true);\r\n    ShaderPicker.loadShaders((success: boolean) => {\r\n        if (success) {\r\n            Page.Canvas.showLoader(false);\r\n            enableWatchmenMode(Parameters.watchmenMode);\r\n            requestAnimationFrame(mainLoop);\r\n        } else {\r\n            Page.Demopage.setErrorMessage(\"shaders-loading\", \"Failed to load shaders.\");\r\n        }\r\n    });\r\n}\r\n\r\nmain();\r\n","import \"./page-interface-generated\";\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    TIME: \"time-checkbox-id\",\r\n    SPEED: \"speed-range-id\",\r\n    SHARPNESS: \"sharpness-range-id\",\r\n    DENSITY: \"density-range-id\",\r\n    MODE: \"mode-tabs-id\",\r\n    HIGH_DPI: \"high-dpi-checkbox-id\",\r\n    SCALE: \"scale-range-id\",\r\n    SYMETRY: \"symetry-range-id\",\r\n    DETAILS: \"details-range-id\",\r\n    BACKGROUND_COLOR: \"background-color-id\",\r\n};\r\n\r\ntype Observer = () => unknown;\r\nconst backgroundColorChangeObservers: Observer[] = [];\r\nPage.ColorPicker.addObserver(controlId.BACKGROUND_COLOR, () => {\r\n    for (const observer of backgroundColorChangeObservers) {\r\n        observer();\r\n    }\r\n});\r\n\r\nPage.Controls.setVisibility(controlId.HIGH_DPI, window.devicePixelRatio > 1);\r\n\r\nfunction safePow(x: number, p: number): number {\r\n    if (x <= 0) {\r\n        return 0;\r\n    } else if (x >= 1) {\r\n        return 1;\r\n    }\r\n    return Math.pow(x, p);\r\n}\r\n\r\ninterface IRGB {\r\n    r: number; // in [0, 255]\r\n    g: number; // in [0, 255]\r\n    b: number; // in [0, 255]\r\n}\r\n\r\nabstract class Parameters {\r\n    public static get speed(): number {\r\n        return Page.Range.getValue(controlId.SPEED);\r\n    }\r\n\r\n    public static addSpeedChangeObserver(callback: (newSpeed: number) => unknown): void {\r\n        Page.Range.addObserver(controlId.SPEED, callback);\r\n    }\r\n\r\n    public static get sharpness(): number {\r\n        const rawValue = Page.Range.getValue(controlId.SHARPNESS);\r\n        return safePow(rawValue, 0.05);\r\n    }\r\n\r\n    public static get density(): number {\r\n        const rawValue = Page.Range.getValue(controlId.DENSITY);\r\n\r\n        if (rawValue < 0.5) {\r\n            return 0.5 * safePow(2 * rawValue, 0.1);\r\n        } else {\r\n            return 1 - 0.5 * safePow(2 - 2 * rawValue, 0.05);\r\n        }\r\n    }\r\n\r\n    public static get watchmenMode(): boolean {\r\n        const mode = Page.Tabs.getValues(controlId.MODE);\r\n        return mode[0] === \"1\";\r\n    }\r\n    public static addWatchmenModeChange(callback: (enabled: boolean) => unknown): void {\r\n        Page.Tabs.addObserver(controlId.MODE, () => {\r\n            callback(Parameters.watchmenMode);\r\n        });\r\n    }\r\n\r\n    public static get supportHighDPI(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.HIGH_DPI);\r\n    }\r\n\r\n    public static addResizeObserver(callback: () => unknown): void {\r\n        Page.Checkbox.addObserver(controlId.HIGH_DPI, callback);\r\n        Page.Canvas.Observers.canvasResize.push(callback);\r\n    }\r\n\r\n    public static get scale(): number {\r\n        return Page.Range.getValue(controlId.SCALE);\r\n    }\r\n\r\n    public static get symetry(): number {\r\n        return 2 * Page.Range.getValue(controlId.SYMETRY) - 1;\r\n    }\r\n\r\n    public static get details(): number {\r\n        return Page.Range.getValue(controlId.DETAILS);\r\n    }\r\n\r\n    public static get backgroundColor(): IRGB {\r\n        return Page.ColorPicker.getValue(controlId.BACKGROUND_COLOR) as IRGB;\r\n    }\r\n\r\n    public static addColorChangeObserver(callback: Observer): void {\r\n        backgroundColorChangeObservers.push(callback);\r\n    }\r\n}\r\n\r\nfunction updateBackgroundColorPickerVisibility(): void {\r\n    Page.Controls.setVisibility(controlId.BACKGROUND_COLOR, Parameters.watchmenMode);\r\n}\r\nParameters.addWatchmenModeChange(updateBackgroundColorPickerVisibility);\r\nupdateBackgroundColorPickerVisibility();\r\n\r\nexport {\r\n    IRGB,\r\n    Parameters,\r\n}\r\n","import { IRGB, Parameters } from \"./parameters\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nconst canvasContainer = Page.Canvas.getCanvasContainer();\r\n\r\nconst htmlBackgroundElement = document.createElement(\"div\");\r\nhtmlBackgroundElement.classList.add(\"rorschach-face-element\");\r\nhtmlBackgroundElement.style.visibility = \"hidden\";\r\ncanvasContainer.appendChild(htmlBackgroundElement);\r\n\r\nconst htmlFaceElement = document.createElement(\"div\");\r\nhtmlFaceElement.classList.add(\"rorschach-face-element\");\r\nhtmlFaceElement.id = \"rorschach-face\";\r\nhtmlFaceElement.style.visibility = \"hidden\";\r\ncanvasContainer.appendChild(htmlFaceElement);\r\n\r\nfunction getBackgroundForColorAsBase64(color: IRGB): string {\r\n    return window.btoa(\r\n        `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 500 500\">\r\n            <path stroke=\"none\" fill=\"rgb(${color.r}, ${color.g}, ${color.b})\" d=\"M 0,0 H 500 V 500 H 0 Z m 130.47,342.13 c 7.52,60.63 5.80,62.61 44.1,97.1 18.53,16.72 35.18,35.13 68.09,35.13 41.81,5.66 61.98,-20.86 68.18,-26.91 C 361.29,405.75 346.29,398.08 358.13,353.87 400.36,325.70 416.15,164.79 245.25,164.79 84.54,164.79 96.13,332.93 130.47,342.13 Z\"/>\r\n        </svg>`\r\n    );\r\n}\r\n\r\nfunction setBackgroundColor(color: IRGB): void {\r\n    const svgBase64 = getBackgroundForColorAsBase64(color);\r\n    htmlBackgroundElement.style.backgroundImage = `url(\"data:image/svg+xml;base64,${svgBase64}\")`;\r\n}\r\n\r\nsetBackgroundColor(Parameters.backgroundColor);\r\n\r\nfunction setVisibility(visible: boolean): void {\r\n    const visibility = visible ? \"\" : \"hidden\";\r\n    htmlFaceElement.style.visibility = visibility;\r\n    htmlBackgroundElement.style.visibility = visibility;\r\n}\r\n\r\nexport {\r\n    setBackgroundColor,\r\n    setVisibility,\r\n};\r\n\r\n","import { gl } from \"./gl-utils/gl-canvas\";\r\nimport { Shader } from \"./gl-utils/shader\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport { VBO } from \"./gl-utils/vbo\";\r\n\r\nconst shadersList: Shader[] = [null, null];\r\n\r\nenum EMode {\r\n    CLASSIC = 0, // index of this shader in the array\r\n    WATCHMEN = 1, // index of this shader in the array\r\n}\r\nlet currentMode: EMode | null = null;\r\n\r\nconst randomScalar = Math.random() * 200 - 100;\r\n\r\nfunction loadShaderInternal(mode: EMode, vertexFilename: string, vbo: VBO, callback: (success: boolean) => unknown): void {\r\n    ShaderManager.buildShader(\r\n        {\r\n            fragmentFilename: \"rorschach.frag\",\r\n            vertexFilename,\r\n            injected: {\r\n                SEED: randomScalar.toString(),\r\n                WATCHMEN_MODE_ID: (mode === EMode.WATCHMEN) ? \"1\" : \"0\",\r\n            },\r\n        }, (builtShader: Shader | null) => {\r\n            if (builtShader !== null) {\r\n                builtShader.a[\"aCoords\"].VBO = vbo;\r\n                shadersList[mode] = builtShader;\r\n                callback(true);\r\n            } else {\r\n                const errorId = `shader-loading-${mode}`;\r\n                Page.Demopage.setErrorMessage(errorId, `Failed to load/build the shader for the mode '${mode}'.`);\r\n                callback(false);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadShaders(callback: (success: boolean) => unknown): void {\r\n    let totalSuccess = true;\r\n    function loadedShaderCallback(success: boolean): void {\r\n        totalSuccess = totalSuccess && success;\r\n\r\n        let allFinished = true;\r\n        for (const shader of shadersList) {\r\n            if (shader === null) {\r\n                allFinished = false;\r\n            }\r\n        }\r\n\r\n        if (allFinished) {\r\n            callback(totalSuccess);\r\n        }\r\n    }\r\n\r\n    const classicModeVBO = VBO.createQuad(gl, -1, -1, 1, 1); // redraw the whole canvas\r\n    loadShaderInternal(EMode.CLASSIC, \"classic-mode.vert\", classicModeVBO, loadedShaderCallback);\r\n\r\n    const watchmenModeVBO = VBO.createQuad(gl, -.6, -.95, .6, .2); // only draw the portion of canvas that is visibile through the SVG\r\n    loadShaderInternal(EMode.WATCHMEN, \"watchmen-mode.vert\", watchmenModeVBO, loadedShaderCallback);\r\n}\r\n\r\n/** Returns true if the shader was changed */\r\nfunction enableShader(mode: EMode): boolean {\r\n    if (currentMode !== mode) {\r\n        currentMode = mode;\r\n        shadersList[currentMode].use();\r\n        shadersList[currentMode].bindAttributes();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getCurrentShader(): Shader {\r\n    return shadersList[currentMode];\r\n}\r\n\r\nexport {\r\n    EMode,\r\n    enableShader,\r\n    getCurrentShader,\r\n    loadShaders,\r\n};\r\n","import { Parameters } from \"./parameters\";\r\n\r\n\r\nlet lastCheckpoint: number; // in relative time\r\nlet lastCheckpointTime: number; // in actual time\r\n\r\nfunction updateCheckpoint(newCheckpoint: number): void {\r\n    lastCheckpoint = newCheckpoint;\r\n    lastCheckpointTime = Date.now();\r\n}\r\nupdateCheckpoint(0);\r\n\r\nlet speed = Parameters.speed;\r\nfunction updateSpeed(): void {\r\n    const newSpeed = Parameters.speed;\r\n    updateCheckpoint(currentTimeInMs());\r\n    speed = newSpeed;\r\n}\r\nParameters.addSpeedChangeObserver(updateSpeed);\r\n\r\nfunction currentTimeInMs(): number {\r\n    return lastCheckpoint + speed * (Date.now() - lastCheckpointTime);\r\n}\r\n\r\n/* Elapsed time in seconds since the application start.\r\n * This time is relative and can be slowed down and made quicker with controls. */\r\nfunction getTime(): number {\r\n    return 0.001 * currentTimeInMs();\r\n}\r\n\r\nexport { getTime }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(633);\n"],"names":["gl","initGL","flags","setError","message","Page","Demopage","setErrorMessage","canvas","Canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","Math","floor","clientWidth","height","clientHeight","this","_gl","GLResource","cachedShaders","buildShader","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","replace","match","name","injected","shader","vert","ShaderSources","getSource","vertexFilename","frag","fragmentFilename","processedVert","processedFrag","Shader","loadSource","getShader","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","builtShader","push","deleteShader","freeGLResources","cachedSources","filename","text","XMLHttpRequest","open","onload","readyState","status","responseText","console","error","statusText","onerror","send","notImplemented","alert","types","str","binder","location","value","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","Array","isArray","uniform1iv","uniform1fv","uniform1f","vertexSource","fragmentSource","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","use","useProgram","bindUniforms","currTextureUnitNb","Object","keys","u","forEach","uName","uniform","loc","bindAttributes","a","aName","attribute","VBO","bind","bindUniformsAndAttributes","ACTIVE_UNIFORMS","i","getActiveUniform","getUniformLocation","size","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","Usage","array","staticUsage","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","minX","minY","maxX","maxY","Float32Array","FLOAT","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","setData","left","lower","setFullCanvas","viewport","drawingBufferWidth","drawingBufferHeight","set","Viewport","GLCanvas","canvasSizeChanged","backgroundColorChanged","Parameters","addResizeObserver","addColorChangeObserver","addWatchmenModeChange","enableWatchmenMode","showLoader","ShaderPicker","loadShaders","watchmenMode","requestAnimationFrame","mainLoop","aspectRatio","backgroundColor","currentMode","EMode","WATCHMEN","CLASSIC","shaderChanged","enableShader","currentShader","getCurrentShader","getAspectRatio","supportHighDPI","r","g","b","RorschachFace","setBackgroundColor","getTime","sharpness","density","scale","symetry","details","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLE_STRIP","enabled","setVisibility","main","controlId","backgroundColorChangeObservers","safePow","x","p","pow","ColorPicker","addObserver","observer","Controls","Range","getValue","addSpeedChangeObserver","rawValue","Tabs","getValues","Checkbox","isChecked","Observers","canvasResize","updateBackgroundColorPickerVisibility","canvasContainer","getCanvasContainer","htmlBackgroundElement","document","createElement","classList","add","style","visibility","appendChild","htmlFaceElement","color","svgBase64","btoa","getBackgroundForColorAsBase64","backgroundImage","visible","shadersList","randomScalar","random","loadShaderInternal","mode","vbo","ShaderManager","SEED","toString","WATCHMEN_MODE_ID","errorId","totalSuccess","loadedShaderCallback","allFinished","classicModeVBO","watchmenModeVBO","lastCheckpoint","lastCheckpointTime","updateCheckpoint","newCheckpoint","Date","now","speed","currentTimeInMs","newSpeed","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}